name: Package Check

on:
  pull_request:
    branches: [main]
    paths:
      - 'package.json'
      - '.npmignore'
      - '.gitignore'
      - 'tsconfig.json'
      - 'src/**'
      - 'scripts/build-cjs.js'
      - 'scripts/check-npm-package.js'
  push:
    branches: [main]
    paths:
      - 'package.json'
      - '.npmignore'
      - '.gitignore'
      - 'tsconfig.json'
      - 'src/**'
      - 'scripts/build-cjs.js'
      - 'scripts/check-npm-package.js'

jobs:
  check-package:
    runs-on: ubuntu-latest
    name: Verify npm package contents

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Check package contents
        run: npm run check:package

      - name: Verify package size
        run: |
          # Get package size
          SIZE_OUTPUT=$(npm pack --dry-run --json)
          SIZE_KB=$(echo "$SIZE_OUTPUT" | jq '.[0].size' | awk '{print $1/1024}')
          UNPACKED_KB=$(echo "$SIZE_OUTPUT" | jq '.[0].unpackedSize' | awk '{print $1/1024}')

          echo "📦 Package size: ${SIZE_KB} KB"
          echo "📂 Unpacked size: ${UNPACKED_KB} KB"

          # Fail if package is too large (e.g., > 1MB packed)
          if (( $(echo "$SIZE_KB > 1024" | bc -l) )); then
            echo "❌ Package is too large! Size: ${SIZE_KB} KB (limit: 1024 KB)"
            exit 1
          fi

      - name: Test package installation
        run: |
          # Create a test directory
          mkdir -p /tmp/test-install
          cd /tmp/test-install

          # Pack the package
          cd $GITHUB_WORKSPACE
          npm pack --quiet
          PACKAGE_FILE=$(ls node-email-verifier-*.tgz | head -n 1)
          mv "$PACKAGE_FILE" /tmp/test-install/
          cd /tmp/test-install

          # Initialize a test project
          npm init -y --silent

          # Install the packed package
          npm install "./$PACKAGE_FILE"

          # Test ESM import
          echo 'import emailValidator from "node-email-verifier"; console.log("✓ ESM import works");' > test.mjs
          node test.mjs

          # Test CommonJS require
          echo 'const emailValidator = require("node-email-verifier"); console.log("✓ CommonJS require works");' > test.js
          node test.js

          # Test TypeScript types with CommonJS
          npm install --save-dev typescript @types/node
          echo '{"compilerOptions":{"module":"commonjs","target":"es2020","moduleResolution":"node","allowSyntheticDefaultImports":true,"esModuleInterop":true,"skipLibCheck":true}}' > tsconfig.json
          echo 'import emailValidator from "node-email-verifier"; async function test() { const result = await emailValidator("test@example.com"); console.log("✓ TypeScript types work"); } test();' > test.ts
          npx tsc test.ts
          node test.js

          echo "✅ Package installation test passed!"
